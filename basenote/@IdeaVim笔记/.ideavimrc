"" Source your .vimrc
"source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch
set hlsearch

" Don't use Ex mode, use Q for formatting.
map Q gq<CR>

" Esc jk
imap jk <Esc>
imap kj <Esc>
nnoremap <space><space> :action ToggleDistractionFreeMode<CR>
set timeoutlen = 300

" wyn自定义vim配置
" //基本配置
" 重新读取.ideavimrc文件
" nnoremap <leader>lv :source ~/.ideavimrc
" 显示相对行号
set number relativenumber
" 自动切换输入法，保存插入模式输入法状态
set keep-english-in-normal-and-restore-in-insert
" 搜索时忽略大小写
set ignorecase
" 搜索时智能匹配大小写
set smartcase
" Redo
nnoremap U <C-r>
" 复制到行尾
nnoremap Y y$
" 开启surround插件
set surround
" 开启参数编辑插件
set argtextobj
" easyMotion 模拟，额外依赖插件：AceJump,IdeaVim-EasyMotion
nmap s :action KJumpAction<cr>

" 设置前置leader键
let mapleader = ","
" 系统剪贴板复制
nnoremap <leader>c "+y
vnoremap <leader>c "+y
" 系统剪贴板粘贴
nnoremap <leader>v "+p
vnoremap <leader>v "+p
" 0寄存器粘贴
nnoremap <leader>0 "0p
vnoremap <leader>0 "0p
" 复制单个单词到寄存器o和剪贴板并标记到o
nnoremap <leader>y mo"+yiw"oyiw
" 剪切单个单词到寄存器o和剪贴板并标记到o
nnoremap <leader>j mo"+yiw"oyiwdiw
" 替换单个单词为寄存器o中的内容并来回标记o和p,来回跳标记为的是使用``来跳回标记
nnoremap <leader>p mpviw"+p`o`p
" Search 查找
nnoremap <leader>/ :action Replace<CR>
nnoremap <leader>fd :action Find<CR>
nnoremap <leader>fa :action FindInPath<CR>

" //跳转类快捷键
" 跳转类
nnoremap <leader>gc :action GotoClass<CR>
" 跳转文件
nnoremap <leader>gf :action GotoFile<CR>
" 跳转命令
nnoremap <leader>ga :action GotoAction<CR>
" 跳转到定义
nnoremap <leader>gd :action GotoDeclarationOnly<CR>
" 跳转到实现
nnoremap <leader>gi :action GotoImplementation<CR>
" 跳转到父类方法
nnoremap <leader>gs :action GotoSuperMethod<CR>
" 跳转到测试
nnoremap <leader>gt :action GotoTest<CR>
" 查找使用
nnoremap <leader>fu :action FindUsages<CR>
" 查找使用(当前文件)
nnoremap <leader>ff :action FindUsagesInFile<CR>
" 显示使用
nnoremap <leader>su :action ShowUsages<CR>
" 行首 go head
nnoremap gh ^
" 行尾 go last
nnoremap gl $
" 跳转上个方法开始
nnoremap { [m
" 跳转下个方法开始
nnoremap [ ]m
" 跳转上个方法结束
nnoremap } [M
" 跳转下个方法结束
nnoremap ] ]M

" //Window Operation
nnoremap <Leader>ww <C-W>w
nnoremap <Leader>wc <C-W>c
nnoremap <Leader>wh <C-W>h
nnoremap <Leader>wj <C-W>j
nnoremap <Leader>wk <C-W>k
nnoremap <Leader>wl <C-W>l
nnoremap <Leader>ws <C-W>s
nnoremap <Leader>wv <C-W>v
nnoremap <Leader>w- <C-W>-
nnoremap <Leader>w+ <C-W>+
nnoremap <Leader>w= <C-W>=
" 窗口工具
nnoremap <leader>wt :action ActiveToolwindowGroup<CR>
nnoremap <leader>wa :action HideAllWindows<CR>
" 切换标签页
nnoremap <tab> gt
nnoremap <Leader>1 1gt
nnoremap <Leader>2 2gt
nnoremap <Leader>3 3gt
nnoremap <Leader>4 4gt
nnoremap <Leader>5 5gt
nnoremap <Leader>6 6gt
nnoremap <Leader>7 7gt
nnoremap <Leader>8 8gt
nnoremap <Leader>9 9gt
" 关闭标签页
nnoremap <leader>x :action CloseContent<CR>
" 打开标签页
nnoremap <leader>X :action ReopenClosedTab<CR>
" 最近标签页
nnoremap <Leader>e :action RecentFiles<CR>
" 最近修改的文件
nnoremap <Leader>re :action RecentChangedFiles<CR>
" 最近的项目
nnoremap <Leader>rp :action ManageRecentProjects<CR>

" //翻页操作
" nnoremap j jzz
" nnoremap k kzz
nnoremap <C-j> <C-d>
nnoremap <C-k> <C-u>
" 打开所有折叠
nnoremap zr zR
" 关闭所有折叠
nnoremap zm zM

" //显示界面
" 显示类图
nnoremap <Leader>sdd :action ShowUmlDiagram<CR>
nnoremap <Leader>sdp :action ShowUmlDiagramPopup<CR>
" 显示文件结构
nnoremap <Leader>ss :action FileStructurePopup<CR>
" 显示右键菜单
nnoremap <leader>sm :action ShowPopupMenu<CR>
" 显示文件路径
nnoremap <leader>sf :action ShowFilePath<CR>

" //重构
" 重构工具
nnoremap <leader>rr :action Refactorings.QuickListPopupAction<CR>
" 引入变量
nnoremap <leader>rv :action IntroduceVariable<CR>
" 提取方法
nnoremap <leader>rm :action ExtractMethod<CR>
" <leader>r 重命名(shift+F6)
nnoremap <leader>rn :action RenameElement<CR>
" <leader>W 用来删除当前文件所有行尾多余空格
nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>
" <leader>q quick java doc
nnoremap <leader>q :action QuickJavaDoc<CR>

"行之间移动替换
nnoremap <S-A-j> :m .+1<CR>==
nnoremap <S-A-k> :m .-2<CR>==
inoremap <S-A-j> <Esc>:m .+1<CR>==gi
inoremap <S-A-k> <Esc>:m .-2<CR>==gi
vnoremap <S-A-j> :m '>+1<CR>gv=gv
vnoremap <S-A-k> :m '<-2<CR>gv=gv

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
map <leader>d <Action>(Debug)

"" Map <leader>b to toggle the breakpoint on the current line
map <leader>b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrc
" Quit normal mode

" IDEA VIM 命令兼容设置
sethandler <C-A> a:ide
sethandler <C-B> a:vim
sethandler <C-C> a:ide
sethandler <C-D> a:ide
sethandler <C-E> a:ide
sethandler <C-F> a:ide
sethandler <C-G> a:ide
sethandler <C-H> a:ide
sethandler <C-I> a:vim
sethandler <C-J> a:vim
sethandler <C-K> a:vim
sethandler <C-L> a:ide
sethandler <C-M> a:ide
sethandler <C-N> a:ide
sethandler <C-O> a:vim
sethandler <C-P> a:ide
sethandler <C-Q> a:ide
sethandler <C-R> a:vim
sethandler <C-S> a:ide
sethandler <C-T> a:vim
sethandler <C-U> a:ide
sethandler <C-V> a:vim
sethandler <C-W> a:vim
sethandler <C-X> a:ide
sethandler <C-Y> a:ide
sethandler <C-[> a:ide
sethandler <C-]> a:vim
sethandler <A-S-J> a:vim
