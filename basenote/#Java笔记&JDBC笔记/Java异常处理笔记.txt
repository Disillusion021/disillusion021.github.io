1. Java中的报错机制是什么？(☆☆☆)
	Java中程序会因为代码的不同和操作的不同出现各式各样的问题，Java开发者根据问题的发生原因，将不同的问题划分为不同的种类定义在系统中，换言之：所有的报错本质上都对应一个系统定义的Java类。具体报错的信息其实就是程序new出来的指定报错类的对象并抛出给JVM，由JVM显示错误信息！这些所有报错的类型有一个共同的父类，这个父类就被称为Throwable类！

2. 什么是Throwable类？
	Throwable被定义为所有报错类的父类，Throwable有两个子类，分别为：Error(错误类)、Exception(异常类)

3. 什么是Error类？
	Error类是Java中所有错误类的父类，错误一般是一种不可逆的硬性问题，通过程序是无法解决错误的，换言之：一旦程序出现错误，程序员无需过多关心错误的发生原因和解决方案，只需重新编写代码或者修改原有代码即可！常见的错误有：编译错误、JVM崩溃、内存不足。

4. 什么是Exception类？(☆☆☆)
	Exception类是所有异常类的父类，当程序出现异常时，程序员需要关注异常的发生原因并提供相应的解决方案！异常根据发生原因的不同，大致分为两大类：
	(1). 编译时异常：和编译错误不同，编译时异常指的是代码在编译阶段语法没有问题，但是由于系统检测到该方法潜在可能出现问题，并进行报错提示的机制称为编译时异常！
	(2). 运行时异常：代码编译阶段没有任何语法问题，但是运行过程中出现的报错称为运行时异常，一般情况下：运行阶段报错中99%都属于运行时异常！

5. 常见的运行时异常(RuntimeException)有哪些？
	(1). java.lang.ArrayIndexOutOfBoundsException：数组索引越界异常
		发生原因：操作数组的索引超出了已有的范围！
	
	(2). java.lang.NullPointerException：空指针异常
		发生原因：由于null调用方法引起的异常(null没法调用方法！)

	(3). java.util.InputMismatchException：输入类型不匹配异常
		发生原因：由于输入的数据类型和接受的数据类型不匹配

	(4). java.lang.ArithmeticException：算术异常
		发生原因：违法了数学运算法则

	研究常见的异常发生原因有助于帮助我们快速找准程序的报错原因并提供对应的解决方案，如果异常不解决，首先会造成程序直接终止，并且还会对客户的体验感造成影响！
	
6. 异常的解决方案有哪些？(☆☆)
	(1). try-catch-finally结构
	(2). throws关键字

7. try-catch-finally结构的特点？(☆☆☆☆☆)
	(1). try中表示尝试运行的代码，如果代码出现异常，则直接抛出具体的异常对象，catch中负责捕获指定种类的异常，并针对该异常进行解决，***finally中表示无论是否出现异常都会被执行的代码***
	(2). try-catch-finally必须声明try，但是catch和finally任选其一声明即可！finally最多只能声明一个，但是catch可以声明若干个！
	
8. 什么是throws关键字？throws关键字如何解决异常？(☆☆☆)
	throws其实没有对异常进行任何处理，只是在方法上声明方法中可能出现的异常种类，提示调用者需要针对方法内可能出现的异常进行解决和规避！
	语法结构：public void 方法名() throws 异常种类 {

	}

9. 什么是throw关键字？throw关键字和throws关键字的区别是什么？
	throw关键字用在方法内，表示抛出一个具体的异常对象，并显示报错信息！
	throws关键字用在方法上，表示声明方法可能出现的异常类型！
	throw语法结构：throw new 异常种类();

10. 什么是自定义异常？一般继承RuntimeException，因为这样可以使用jvm的默认异常处理机制
	自定义异常就是程序员根据程序报错的需求自定义出来的异常种类！
	
11. 对于运行时异常，程序中如果没有处理，默认就是throws的方式来一层层往上抛处理，最后抛给jvm处理，运行时报异常中断程序运行。
12. 对于编译时异常，必须处理，若果抛出了一个编译时异常，上一层必须trycatch或继续throws来处理。

































	