0. Java及数据库中对时间的处理

Runtime.getRuntime().freeMemory();获取系统剩余内存空间
System.currentTimeMillis();获取系统当前时间

Calendar日期类 (年月日时分秒毫秒) 有get和set方法和add方法还有setTime把Date转化为Calendar和getTIme把日期类转化为时间类。
Java中日期类和Date类型通过setTime()和getTime()方法可以无缝转换
Java中字符串和Date类型可以通过DateFormat类(SimpleDateFormat是它的实现类)中的format()和parse()方法无缝转换
Date util包里的时间类，根据毫秒数从1970年1月1日0点0分0秒计时，有一个getTime方法，用来获取系统当前时间距unix日多少毫秒

1. 什么是Java的运行环境？Java运行环境有几种？(☆)
	Java是一种跨平台的编程语言，即：所有操作系统下都可以运行  RE中所有的功能，此外可以支持程序员查看底层源代码

2. Java中的开发工具有哪些？(☆☆☆)
	当计算机安装完JDK后，计算机已经可以运行Java程序了！但是为了加快Java程序的编写，我们借助开发工具来完成Java代码的编写，工作中常见的编程工具：
	(1). Eclipse / MyEclipse / STS
	(2). IDEA

3. 一个完成的Java工程的基本目录结构？
	(1). 工程名：表示存储所有和开发相关的文档！(例如：java13)
	(2). src：开发根目录(所有Java程序源文件必须存储到src文件夹中)
	(3). 包：表示Java文件的类库(存储Java文件的文件夹)(目的：Java文件的分类管理)
		命名规范：为了保证包名的唯一性，包中所有单词必须英文，并且小写，而写按照指定规则命名，例如：公司域名.公司名.项目名.模块名
	(4). 类：表示Java文件，就是以.java结尾的Java文件的名称！
		命名规范：大驼峰命名法，所有英文单词首字母必须大写处理，例如：Student、StudentAndTeacher
	
4. Java注释风格？(☆☆☆)
	什么是注释：注释指代不被程序识别的内容，用于程序的解释说明！
	Java注释风格有三种：
	(1). 单行注释：通过//声明，通过ctrl + ?快速生成
	(2). 多行注释：通过/* */声明，通过ctrl + shift + ?快速生成
	(3). 文档注释：通过/** */声明
	\t: 表示缩进符，用于对齐
5. 什么是条件分支语句？Java中共有几种条件分支语句的语法结构？(☆☆)
	条件分支语句本质上就是根据条件不同选择性执行不同代码的结构！
	Java中声明条件分支语句的语法，共有三种：
	(1). if语句
	(2). 三目运算符
	(3). switch语句

6. if语句共有哪些衍生的写法？(☆☆)
	(1). 一种分支：
		if (条件) {
			满足条件运行的代码
		}

	(2). 两种分支：
		if (条件) {
			满足条件运行的代码
		} else {
			不满足条件运行的代码
		}
	
	(3). 多种分支：
		if (条件1) {
			满足条件1运行的代码
		} else if (条件2) {
			满足条件2运行的代码
		} else {
			不满足任何条件运行的代码
		}

	(4). if嵌套：处理多种分支
		if (条件1) {
			if (条件2) {
				满足条件1和条件2运行的代码
			} else {
				满足条件1和不满足条件2运行的代码
			}
		} else {
			不满足条件1和条件2运行的代码！
		}

	(5). if并列：处理多种分支
		if (条件) {
			满足条件运行的代码
		}

		if (条件) {
			满足条件运行的代码
		}

		if (条件) {
			满足条件运行的代码
		}

7. 什么是三目运算符？(☆)
	三目运算符本身指代一个数据，通过三个运算符号形成的一种表达式称为三目运算符！
        语法结构：条件 ? 条件成立结果 : 条件不成立结果

	三目运算符的优势和劣势有哪些？
	优势：代码简洁
	劣势：更适用于判断两种分支的情况，对于多种分支的判断语法结构比较复杂，可读性较低！

        	Object obj = true ? new Integer(1):new Double(2.0);
       	System.out.println(obj);
	输出 1.0 而不是 1，三目运算符要看做一个整体，true ? new Integer(1):new Double(2.0) 这是一个整体，提升了精度单位。

8. 什么是switch语句？
	switch语句本身也是条件分支语句中的一种写法，语法结构如下：
	switch (变量) {
		case 值1:
			满足变量等于值1运行的代码
			break;
		case 值2:
			满足变量等于值2运行的代码
			break;
		case 值3:
			满足变量等于值3运行的代码
			break;
		default:
			不满足以上任意条件执行的代码
			break;
	}

	break在switch语句中的含义表示结束当前swtich语句，当程序指定到break时，switch语句直接终止，不会继续运行！break在switch语句中可以省略！省略之后会导致程序跳过后续所有判断直接继续运行直到遇到break为止！

	switch语句的优势和劣势？
	优势：适用于判断多种分支的情况，代码通俗易懂！
	劣势：只能判断相等的情况！

9. Java中循环的语法结构共有几种？(☆)
	(1). for循环	for(int i = 0; i < list.length; i++) {}
	(2). while循环
	(3). do while循环
	(4). foreach循环	for(int i : list) {}
	(5). 方法递归
 	* for循环和foreach的区别：foreach只能用来遍历数组和集合，无法在遍历过程中对数组或者集合进行修改，而for循环可以在遍历的过程中对原数组或者集合进行修改
10. 循环中break、continue、return单词的含义分别是什么？(☆☆☆)
	break：结束当前循环(一个break只能结束一个循环！)
		扩展：break默认状态下会结束掉离break最近的循环！但是也可以通过给循环声明别名的形式，通过break 别名;来结束指定循环
		aa: for (int i = 1; i <= 5; i++) {
            		bb: for (int j = 1; j <= 5; j++) {
                		if (j == 3) {
                    			break aa;
                		}
                		System.out.println("i = " + i + "，j = " + j);
            		}
        	}
	continue：跳过本次循环，并立即执行下次循环！
	return：结束当前方法的运行

11. 如何生成min ~ max范围之内的随机整数？(☆)
	(int) (Math.random() * (max - min + 1)) + min	Math.random(): 表示生成0~1之间的随机小数，可能生成0，但是永远不能生成1
	第二种 利用Random r = new Random()生成
	第三种 利用系统事件生成

12. while和do while循环的语法结构和特点区别？(☆)
	while循环：先判断后运行
		while (循环条件) {
			条件成立循环运行的代码
		}

	do while循环：先运行再判断，至少运行一次！
		do {
			条件成立循环运行的代码	
		} while (循环条件);

13. 如何快速声明死循环？(☆)
	for循环：
		for (;;) {

		}

	while循环：
		while (true) {

		}

14. 什么是数组？
	数组是Java数据结构之一，所谓数据结构，可以简单理解为能够容纳多个数据的结构就成为数据结构！根据数据结构存储数据和管理数据的方式不同，数据结构可以分为：数组、集合、栈、队列、链表、树等...
	如何声明数组?(数组必须声明长度)(数组致命缺陷是数组长度固定) 
	变量类型[] 数组名 = new 变量类型[数组长度]; int[] a = new int[5];
	int[] a = new int[]{1, 2, 3, 4, 5}; int[] a = {1, 2, 3, 4, 5};

15. 什么是Java的方法？ 
	Java的方法其实就是程序员自定义的子程序，和main方法类似，我们可以在自定义的方法中设置代码，并通过方法调用的形式访问并执行自定义方法中的代码！
	定义方法的目的：简化开发代码量，将程序中出现的重复性代码和操作定义到方法中，通过调用的形式即可访问！

16. 如何定义方法？
	public static void 自定义方法名() {
		方法体：方法内声明的代码
	}

17. 什么是方法的参数？
	我们在设定方法时，可以在方法的小括号内通过设定参数，来接受调用者传递给方法的数据，方法内部可以利用这些数据完成指定功能的计算和处理！

18. 参数的分类是什么？
	但凡在方法小括号内声明的内容都称为参数，参数根据功能的划分可以分为两种：
	(1). 形参：形式上的参数，不指代任何具体的数据
	(2). 实参：实际上的参数，指代一个具体的数据

19. 什么是方法的返回值？
	方法的返回值在方法内部通过return 数据;的形式声明，表示方法返回给调用者的数据信息！方法声明返回值时，必须符合如下规则：
	(1). 方法声明return返回值后，return的下面不允许在运行其他的代码！
	(2). 一个方法只能声明一个返回值结果，即：return后面只能跟一个数据！
		不允许出现：return 数据1, 数据2;(错误写法！)
	(3). 当方法声明return返回值后，void需要改成对应的返回值数据的数据类型！

20. 什么是方法的可变形参？(☆☆☆)
	方法的可变形参通过：变量类型 ... 变量名，声明，可变形参本质上就是指代可以动态接受若干个指定类型的实参的结构称为可变形参！
	声明可变形参的好处：提高程序的可维护性
	e.g.
	public static int getSum(int ... a) {
		//int ... a 就叫做可变形参，不论实参有多少个，都能接收。
		//a	本质上就是数组。
		int sum = 0;
		for (int i : a) {
			sum += i;
		}
		return sum;
	}
	套路：以后但凡有人问你这个概念，这个结构有什么好处的时候！
		(1). 增强程序的安全性和可控性
		(2). 简化开发代码量，提高开发效率
		(3). 增强程序的可维护性和可扩展性

21. 定义方法时每个方法中单词的含义是什么？
	public static void m(int a, int b) {

	}

	public：访问修饰符，控制被修饰的方法的访问权限和范围！(public、private)
	static：类访问修饰符(加了static通过类名访问，但是比较占用内存。不加static通过对象访问，但是相对节约内存)
	void：返回值类型(如果方法设置了返回值void需要改成对应返回数据的类型)
	m：方法名
	(int a, int b)：参数列表
	{}：方法体，表示声明方法内部的代码

22. 数组的排序算法是什么？如何进行排序处理？
	关于数组的排序，有两种排序方式，分别为升序排序和降序排序！
	升序排序：Java系统提供了一个方法可以快速排序
		Arrays.sort(数组);

	降序排序：程序员自己编写算法代码进行排序，常用的排序算法有例如冒泡排序、选择排序、插入排序

	//冒泡排序算法
        int temp = 0;
        for (int i = 0; i < arr.length - 1; i++) { //i表示循环第几轮
            for (int j = 0; j < arr.length - 1 - i; j++) { //表示第i轮的第几次！
                if (arr[j] < arr[j + 1]) { //值互换！ 
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                } 
            }
        }
	
23. Java中的数据类型共有哪些？(☆☆☆☆☆)
	Java中将所有的数据的类型共分为两大种：
	(1). 基本数据类型：Java中自带的数据类型(数量是有限的)
	(2). 引用数据类型：基于基本类型衍生而来的数据类型(Java中除了基本数据类型以外，其余所有的类型统称为引用数据类型)

24. Java中共有几种基本类型？(☆☆☆☆☆)
	Java中基本数据类型共有八种：
	(1). 整型：
		byte		1字节		-128 ~ 127
		short		2字节		-32768 ~ 32767
		int		4字节		-2147483648 ~ 2147483647
		long		8字节		-9223372036854775808 ~ 9223372036854775807
	(2). 浮点型：
		float		4字节
		double		8字节
	(3). 布尔型：
		boolean		1字节
	(4). 字符型：
		char		2字节
	
	 






















	