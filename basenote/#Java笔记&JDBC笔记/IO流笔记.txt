1. 什么是IO流技术？(☆☆)
	IO流技术是Java用于解决设备与设备之间，或者文档与文档之间数据传输时使用的技术！
	IO流技术的核心思想就是将数据看做流的形式，通过"管道"对流进行传输！
	核心技术：根据传输数据的效率和种类，IO流设置了很多管道的种类！我们需要研究的就是IO流设置了哪些种类的管道！
IO流四步：第一步：获取位置！第二步：建立管道！第三步：传输数据！第四步：关闭资源！
2. IO流中流的种类有哪些？(☆☆☆☆☆)
	按照流向划分，IO流可以分为如下两种：
		(1). 输入流
		(2). 输出流

	按照传输数据的功能和特点，IO流可以分为如下三种：
		(1). 节点流：表示具备数据传输功能的流，是IO流中最基础的流！
			字节流：一次只能传输一个字节的流(只能识别英文)
				字节输入流：InputStream
					read()：一次读取一个字节的字节编码(返回整数结果！)
				字节输出流：OutputStream
					write(char c)：一次写入一个字节的数据！

			字符流：一次只能传输一个字符的流(识别中文)
				字符输入流：Reader
					read()：一次读取一个字符的字节编码(返回整数结果！)
		
				字符输出流：Writer 
					write(char c)：一次写入一个字符的数据或者字符串数据！

		(2). 处理流：本身不具备数据传输的功能，但是可以辅助节点流进行不同功能和种类的数据的传输，可以理解为节点流的延伸和扩展！(系统定义的基于节点流衍生的流)（所以想要用处理流必须要依赖于节点流）
			缓冲流：在节点流的基础上加装缓冲区所有读写操作都是先基  于缓冲区进行操作，然后将缓冲区中的数据一次性读/写，提高了数据传输的效率！
				缓冲字节流：
					缓冲字节输入流：BufferedInputStream
					缓冲字节输出流：BufferedOutputStream

				缓冲字符流：
					缓冲字符输入流：BufferedReader
					缓冲字符输出流：BufferedWriter

			对象流：辅助节点流进行对象的数据传输！
				对象输入流：ObjectInputStream
	
				对象输出流：ObjectOutputStream

		(3). 自定义流(程序员定义的基于节点流衍生的流)





























